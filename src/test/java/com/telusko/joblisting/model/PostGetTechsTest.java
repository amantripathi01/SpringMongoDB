// ********RoostGPT********
/*
Test generated by RoostGPT for test aman5May using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=getTechs_e6f7a2f8cc
ROOST_METHOD_SIG_HASH=getTechs_443a51e600

"""
Scenario 1: Test when 'techs' array is null

Details:
  TestName: validateNullTechsArray.
  Description: This test aims to verify the getTechs method when the 'techs' array is null.
Execution:
  Arrange: No arrangement necessary as the method doesn't accept any parameters.
  Act: Invoke the getTechs method.
  Assert: Assert that the returned result is null.
Validation:
  The assertion verifies that the getTechs method correctly handles situations when the 'techs' array is null, therefore returning null. The significance of this test is to ensure that even in the absence of data, the method handles such cases without throwing exceptions.

Scenario 2: Test when 'techs' array is not null and is of length 0

Details:
  TestName: validateEmptyTechsArray.
  Description: This test will verify the behavior of the getTechs method when the 'techs' array exists but is of length 0.
Execution:
  Arrange: Set 'techs' array to an empty (no elements) array.
  Act: Invoke the getTechs method.
  Assert: Assert that the returned array's length is 0.
Validation:
  The assertion aims to verify that the method correctly handles the case where the 'techs' array exists but has no elements. The significance of this test ensures correct behavior even when there is no data in the 'techs' array.

Scenario 3: Test when 'techs' array is not null and contains elements

Details:
  TestName: validateNonEmptyTechsArray.
  Description: This test is meant to check the getTechs method in a normal scenario when the 'techs' array exists and has elements.
Execution:
  Arrange: Set 'techs' array to a non-empty array (with elements).
  Act: Invoke the getTechs method.
  Assert: Assert that the returned array's length matches the length of the initially set 'techs' array.
Validation:
  The assertion confirms whether the method correctly returns the 'techs' array when it exists and has elements.
  This test is significant as it verifies the regular operation of the method under normal circumstances.
*/

// ********RoostGPT********
package com.telusko.joblisting.model;

import org.springframework.data.mongodb.core.mapping.Document;
import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Arrays;

@Document
public class PostGetTechsTest {

	private String profile;

	private String desc;

	private int exp;

	private String[] techs;

	public PostGetTechsTest() {
	}

	public String[] getTechs() {
		return techs;
	}

	@Test
	public void validateNullTechsArray() {
		techs = null;
		assertNull(getTechs());
	}

	@Test
	public void validateEmptyTechsArray() {
		techs = new String[0];
		assertEquals(0, getTechs().length);
	}

	@Test
	public void validateNonEmptyTechsArray() {
		techs = new String[] { "Java", "SQL", "AWS" };
		assertEquals(3, getTechs().length);
	}

}
